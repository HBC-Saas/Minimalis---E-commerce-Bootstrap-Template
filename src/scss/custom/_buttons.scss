/*
    Buttons
   ------------------------
*/

.btn {
  letter-spacing: $btn-letter-spacing;
  &:not(.dropdown-toggle) {
    min-width: 10.625rem;
  }
}

//button links with colors
@each $color, $value in $theme-colors {
  .btn-link-#{$color} {
    color: $value;

    @include hover {
      color: $value;
      text-decoration: $link-hover-decoration;
    }

    &:focus,
    &.focus {
      color: $value;
    }

    &:disabled,
    &.disabled {
      pointer-events: none;
    }
  }
}

// hover outline buttons
@each $color, $value in $theme-colors {
  .btn-#{$color} {
    &.hover-outline {
      @include hover() {
        background-color: transparent;
        color: $value;
      }

      &:not(:disabled):not(.disabled):active,
      &:not(:disabled):not(.disabled).active,
      .show > &.dropdown-toggle {
        color: $value;
        background-color: transparent;
      }

      &:disabled,
      &.disabled {
        pointer-events: none;
      }
    }
  }
}

// button arrow style
.btn-arrow {
  text-align: left;
  .inner-btn {
    display: flex;
    flex-direction: row;
    align-items: center;
    .arrow {
      position: relative;
      display: inline-block;
      width: 3.75rem;
      height: 1rem;
      margin: 0 .625rem;
      flex-grow: 1;
      .arrow-icon {
        position: absolute;
        display: inline-block;
        width: .625rem;
        height: 1px;
        top: 50%;
        left: 0;
        transition: all 0.2s ease-in-out;
        &:before, &:after {
          content: ' ';
          width: 60%;
          height: 100%;
          position: absolute;
          top: 0;
          right: -1px;
          transform: rotate(0deg);
          opacity: 0;
          visibility: hidden;
          transition: all 0.2s ease-in-out;
        }
        &::before {
          top: -2px;
          right: -1px;
          transform: rotate(45deg);
        }
        &::after {
          top: 2px;
          right: -1px;
          transform: rotate(-45deg);
        }
      }
    }
  }

  &:not(.disabled):not(:disabled) {
    @include hover() {
      .arrow {
        .arrow-icon {
          left: 100%;
          &:before, &:after {
            opacity: 1;
            visibility: visible;
          }
        }
      }
    }
  }
}

// arrow background colors
@each $color, $value in $theme-colors {
  .btn-#{$color} {
    &.btn-arrow {
      .arrow-icon {
        background-color: color-yiq($value);
        &:before, &:after { background-color: color-yiq($value); }
      }
    }
  }
}

// arrow link background colors
@each $color, $value in $theme-colors {
  .btn-link-#{$color} {
    &.btn-arrow {
      .arrow-icon {
        background-color: $value;
        &:before, &:after { background-color: $value; }
      }
    }
  }
}

// arrow background colors hover-outline buttons
@each $color, $value in $theme-colors {
  .btn-#{$color} {
    &.hover-outline {
      &.btn-arrow {
        @include hover() {
          .arrow-icon {
            background-color: $value;
            &:before, &:after { background-color: $value; }
          }
        }
      }
    }
  }
}

// arrow background colors for outline buttons
@each $color, $value in $theme-colors {
  .btn-outline-#{$color} {
    &.btn-arrow {
      .arrow-icon {
        background-color: $value;
        &:before, &:after { background-color: $value; }
      }

      @include hover() {
        .arrow-icon {
          background-color: color-yiq($value);
          &:before, &:after { background-color: color-yiq($value); }
        }
      }

      &:disabled,
      &.disabled {
        pointer-events: none;
      }
    }
  }
}

// Social buttons
@each $color, $value in $social-colors {
  .btn-#{$color} {
    border: 1px solid $black;
    color: $black;
    text-align: left;

    @include hover() {
      background-color: $value;
      border-color: $value;
      color: $white;
      .text-#{$color} { color: $white; }
    }

    &:focus,
    &.focus {
      background-color: $value;
      border-color: $value;
      color: $white;
      .text-#{$color} { color: $white; }
    }

    &:disabled,
    &.disabled {
      pointer-events: none;
    }
  }
  .text-#{$color} { color: $value; }
  .text-#{$color} { color: $value; }
}